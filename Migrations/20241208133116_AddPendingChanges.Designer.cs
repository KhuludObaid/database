// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TrainReservationAPI.Data;

#nullable disable

namespace TrainReservationAPI.Migrations
{
    [DbContext(typeof(TrainReservationContext))]
    [Migration("20241208133116_AddPendingChanges")]
    partial class AddPendingChanges
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0");

            modelBuilder.Entity("TrainReservationAPI.Models.Admin", b =>
                {
                    b.Property<int>("Admin_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Admin_ID");

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("TrainReservationAPI.Models.Dependent", b =>
                {
                    b.Property<int>("Dependent_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Discount_Applied")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Passenger_ID")
                        .HasColumnType("INTEGER");

                    b.HasKey("Dependent_ID");

                    b.HasIndex("Passenger_ID");

                    b.ToTable("Dependents");
                });

            modelBuilder.Entity("TrainReservationAPI.Models.Passenger", b =>
                {
                    b.Property<int>("Passenger_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Loyalty_Class")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Miles_Travelled")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Passenger_ID");

                    b.ToTable("Passengers");
                });

            modelBuilder.Entity("TrainReservationAPI.Models.Payment", b =>
                {
                    b.Property<int>("Payment_No")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Amount")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Payment_Date")
                        .HasColumnType("TEXT");

                    b.Property<int>("Reservation_No")
                        .HasColumnType("INTEGER");

                    b.HasKey("Payment_No");

                    b.HasIndex("Reservation_No");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("TrainReservationAPI.Models.Reservation", b =>
                {
                    b.Property<int>("Reservation_No")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("Expiry_Date")
                        .HasColumnType("TEXT");

                    b.Property<int>("Passenger_ID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Train_ID")
                        .HasColumnType("INTEGER");

                    b.HasKey("Reservation_No");

                    b.HasIndex("Passenger_ID");

                    b.HasIndex("Train_ID");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("TrainReservationAPI.Models.Schedule", b =>
                {
                    b.Property<int>("Schedule_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Arrival_Time")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Departure_Time")
                        .HasColumnType("TEXT");

                    b.Property<int>("Train_ID")
                        .HasColumnType("INTEGER");

                    b.HasKey("Schedule_ID");

                    b.HasIndex("Train_ID");

                    b.ToTable("Schedules");
                });

            modelBuilder.Entity("TrainReservationAPI.Models.Station", b =>
                {
                    b.Property<int>("Station_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Station_ID");

                    b.ToTable("Stations");
                });

            modelBuilder.Entity("TrainReservationAPI.Models.Ticket", b =>
                {
                    b.Property<int>("Ticket_No")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Reservation_No")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Seat_Class")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Seat_No")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Ticket_No");

                    b.HasIndex("Reservation_No");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("TrainReservationAPI.Models.Train", b =>
                {
                    b.Property<int>("Train_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Capacity")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Train_ID");

                    b.ToTable("Trains");
                });

            modelBuilder.Entity("TrainReservationAPI.Models.Trip", b =>
                {
                    b.Property<int>("Trip_No")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<int>("Train_ID")
                        .HasColumnType("INTEGER");

                    b.HasKey("Trip_No");

                    b.HasIndex("Train_ID");

                    b.ToTable("Trips");
                });

            modelBuilder.Entity("TrainReservationAPI.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("TrainReservationAPI.Models.WaitingList", b =>
                {
                    b.Property<int>("Waiting_List_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Passenger_ID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Position")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Train_ID")
                        .HasColumnType("INTEGER");

                    b.HasKey("Waiting_List_ID");

                    b.HasIndex("Passenger_ID");

                    b.HasIndex("Train_ID");

                    b.ToTable("WaitingLists");
                });

            modelBuilder.Entity("TrainReservationAPI.Models.Dependent", b =>
                {
                    b.HasOne("TrainReservationAPI.Models.Passenger", "Passenger")
                        .WithMany()
                        .HasForeignKey("Passenger_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Passenger");
                });

            modelBuilder.Entity("TrainReservationAPI.Models.Payment", b =>
                {
                    b.HasOne("TrainReservationAPI.Models.Reservation", "Reservation")
                        .WithMany()
                        .HasForeignKey("Reservation_No")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Reservation");
                });

            modelBuilder.Entity("TrainReservationAPI.Models.Reservation", b =>
                {
                    b.HasOne("TrainReservationAPI.Models.Passenger", "Passenger")
                        .WithMany()
                        .HasForeignKey("Passenger_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TrainReservationAPI.Models.Train", "Train")
                        .WithMany()
                        .HasForeignKey("Train_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Passenger");

                    b.Navigation("Train");
                });

            modelBuilder.Entity("TrainReservationAPI.Models.Schedule", b =>
                {
                    b.HasOne("TrainReservationAPI.Models.Train", "Train")
                        .WithMany()
                        .HasForeignKey("Train_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Train");
                });

            modelBuilder.Entity("TrainReservationAPI.Models.Ticket", b =>
                {
                    b.HasOne("TrainReservationAPI.Models.Reservation", "Reservation")
                        .WithMany()
                        .HasForeignKey("Reservation_No")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Reservation");
                });

            modelBuilder.Entity("TrainReservationAPI.Models.Trip", b =>
                {
                    b.HasOne("TrainReservationAPI.Models.Train", "Train")
                        .WithMany()
                        .HasForeignKey("Train_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Train");
                });

            modelBuilder.Entity("TrainReservationAPI.Models.WaitingList", b =>
                {
                    b.HasOne("TrainReservationAPI.Models.Passenger", "Passenger")
                        .WithMany()
                        .HasForeignKey("Passenger_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TrainReservationAPI.Models.Train", "Train")
                        .WithMany()
                        .HasForeignKey("Train_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Passenger");

                    b.Navigation("Train");
                });
#pragma warning restore 612, 618
        }
    }
}
